name: ci
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm install --global pnpm
      - run: pnpm install --frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - run: pnpm run build
      - run: pnpm run test
      - name: Report coverage
        run: |
          curl -Lo ./cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.json coverage/lcov.info
          ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      - run: git status --porcelain
      - name: Check no untracked changes
        run: |
          git_status=$(git status --porcelain)
          test -z "$git_status" || exit 1
          echo "$git_status"
  e2e:
    name: e2e playwright@${{ matrix.playwright }} browsers=${{ matrix.browsers }} headless=${{ matrix.headless }}
    strategy:
      fail-fast: false
      matrix:
        # TODO: Test multiple OSs
        # os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-2019]
        playwright: [latest, next]
        # TODO: Test empty + invalid browsers
        # browsers: ['chromium, firefox, webkit', 'chromium', '', 'fake']
        browsers: ['chromium, firefox, webkit', 'chromium']
        headless: [true, false]
        exclude:
          - playwright: next
            browsers: 'chromium'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: ./
        with:
          browsers: ${{ matrix.browsers }}
          headless: ${{ matrix.headless }}
      - run: npm install --global pnpm
      - run: pnpm install --frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - run: pnpm run build
      - run: pnpm add --dir=test/e2e playwright@${{ matrix.playwright }} --no-lockfile
      - run: pnpm run test-e2e
        if: ${{ matrix.headless == true }}
      - run: HEADFUL=true xvfb-run --auto-servernum -- pnpm run test-e2e
        if: ${{ matrix.headless == false }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm install --global pnpm
      - run: pnpm install --frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - run: pnpm run lint
